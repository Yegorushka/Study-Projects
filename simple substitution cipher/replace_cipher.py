import re

# –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
with open('text.txt', "r", encoding="utf-8") as file:
    text = file.read().strip()

# –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ —á–∏—Å–ª–∞
numbers = re.findall(r'\d+', text)
unique_numbers = sorted(set(numbers), key=int)

# –°–ª–æ–≤–∞—Ä—å –∑–∞–º–µ–Ω
replacements = {}

def replace_numbers(text, replacements):
    result = text
    for num, char in replacements.items():
        result = re.sub(rf'\b{num}\b', char, result)
    return result

print("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–º–µ–Ω–∞ —á–∏—Å–µ–ª –Ω–∞ –±—É–∫–≤—ã:")
print("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:")
print(" - –ª—é–±–æ–µ —á–∏—Å–ª–æ ‚Äî –Ω–∞—á–∞—Ç—å –∑–∞–º–µ–Ω—É")
print(" - 'show' ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
print(" - 'list' ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —á–∏—Å–ª–∞")
print(" - 'save' ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ result.txt")
print(" - 'exit' ‚Äî –≤—ã–π—Ç–∏ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è\n")

while True:
    command = input(">>> ").strip().lower()

    if command == "exit":
        print("–í—ã—Ö–æ–¥ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
        break

    elif command == "save":
        final_text = replace_numbers(text, replacements)
        with open("result.txt", "w", encoding="utf-8") as f:
            f.write(final_text)
        print("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ result.txt")
        break

    elif command == "show":
        preview = replace_numbers(text, replacements)
        print("\nüîç –¢–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(preview, "\n")

    elif command == "list":
        print("üìã –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞:")
        print(", ".join(unique_numbers))

    elif command.isdigit():
        if command not in unique_numbers:
            print("‚ùå –≠—Ç–æ —á–∏—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ.")
            continue

        preview = replace_numbers(text, {**replacements, command: '?'})
        print("\n–ü—Ä–∏–º–µ—Ä —Å '?':")
        print(preview)

        letter = input(f"–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –¥–ª—è —á–∏—Å–ª–∞ {command}: ").strip().lower()
        if len(letter) == 1 and letter.isalpha():
            replacements[command] = letter
        else:
            print("‚õî –í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –±—É–∫–≤—É.\n")

    else:
        print("‚õî –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.\n")
