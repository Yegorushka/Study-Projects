import java.util.Scanner;
import java.util.Random;

public class PR12{
    
public static void main(String [] args){
    
    
    Scanner in = new Scanner(System.in);
    System.out.print("Колличество столбцов в матрице A --> ");
    int a2 = in.nextInt();
    System.out.print("Колличество строк в матрице A --> ");
    int a1 = in.nextInt();
    System.out.print("Колличество столбцов в матрице В --> ");
    int b2 = in.nextInt();
    System.out.print("Колличество строк в матрице В --> ");
    int b1 = in.nextInt();
    System.out.print("\n");
    
    if( a2 != b1 ){
        System.out.println("Такие матрицы нельзя переумножить\nПо определению произведения матриц можно перемножать только такие\n матрицы у которых число столбцов в первой матрице равно числу строк во второй матрице");}
    else{
        int[][] mB = new int[b1][b2];
        Random rnd = new Random();
        for (int i=0;i < mB.length;i++) {
            for (int j=0;j < mB[i].length;j++) {
                mB[i][j]=rnd.nextInt(100) + 1;}}
                
        int[][] mA = new int[a1][a2];
        for (int i=0;i < mA.length;i++) {
            for (int j=0;j < mB[i].length;j++) {
                mA[i][j]=rnd.nextInt(100) + 1;}}
        
        int m = mA.length;
        int n = mB[0].length;
        int o = mB.length;
        int[][] res = new int[m][n];
        
        for (int i = 0; i < mA.length; i++) {
    for (int j = 0; j < mA[i].length; j++)
    {System.out.print(mA[i][j] + "\t");}
        System.out.println("\n");}
        System.out.println("*\n");
        for (int i = 0; i < mB.length; i++) {
    for (int j = 0; j < mB[i].length; j++)
    {System.out.print(mB[i][j] + "\t");}
        System.out.println("\n");}
        
    System.out.println("=\n");
    
    

    for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < o; k++) {
                    res[i][j] += mA[i][k] * mB[k][j]; }}}
                   
        
    for (int i = 0; i < res.length; i++) {
        for (int j = 0; j < res[0].length; j++) {
            System.out.format( res[i][j]+"\t");}
    System.out.println();}   }}}